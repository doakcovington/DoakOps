# name: 'Terraform Apply'

# on:
#   workflow_call:

# #Special permissions required for OIDC authentication
# permissions:
#   id-token: write
#   contents: read
#   pull-requests: write

# #These environment variables are used by the terraform azure provider to setup OIDD authenticate. 
# env:
#   ARM_CLIENT_ID: "${{ secrets.AZURE_CLIENT_ID }}"
#   ARM_SUBSCRIPTION_ID: "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
#   ARM_TENANT_ID: "${{ secrets.AZURE_TENANT_ID }}"

# jobs:
#   terraform-apply:
#     name: 'Terraform Apply'
#     if: github.ref == 'refs/heads/main' && needs.terraform-plan.outputs.tfplanExitCode == 2
#     runs-on: ubuntu-latest
#     environment: production
#     needs: [terraform-plan]
    
#     steps:
#     # Checkout the repository to the GitHub Actions runner
#     - name: Checkout
#       uses: actions/checkout@v3

#     # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
#     - name: Setup Terraform
#       uses: hashicorp/setup-terraform@v2

#     # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
#     - name: Terraform Init
#       run: terraform init

#     # Download saved plan from artifacts  
#     - name: Download Terraform Plan
#       uses: actions/download-artifact@v3
#       with:
#         name: tfplan

#     # Terraform Apply
#     - name: Terraform Apply
#       run: terraform apply -auto-approve tfplan
